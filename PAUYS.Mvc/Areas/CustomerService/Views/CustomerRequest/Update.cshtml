@using PAUYS.ViewModel.Concrete
@model CustomerRequestViewModel

@{
    ViewData["Title"] = "Müşteri İsteğine Dönüş";
    Layout = "~/Areas/CustomerService/Views/Shared/_Layout3.cshtml";
    // Layout = (ViewBag.IsAjax) ? "" : "~/Areas/CustomerService/Views/Shared/_Layout3.cshtml"; // İlgili layout sayfasını ayarlayın
}

<h2>@ViewData["Title"]</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
else if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<form asp-action="Update" method="post" class="form-horizontal">
    @Html.AntiForgeryToken()

    <div class="form-group">
        <label for="FirstName" class="control-label col-md-2">Müşteri Adı</label>
        <div class="col-md-10">
            <input type="text" class="form-control" id="FirstName" name="FirstName" value="@Model.FirstName" readonly />
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="LastName" class="control-label col-md-2">Müşteri Soyadı</label>
        <div class="col-md-10">
            <input type="text" class="form-control" id="LastName" name="LastName" value="@Model.LastName" readonly />
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="Email" class="control-label col-md-2">Email</label>
        <div class="col-md-10">
            <input type="text" class="form-control" id="Email" name="Email" value="@Model.Email" readonly />
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="CustomerMessage" class="control-label col-md-2">Müşteri Talebi</label>
        <div class="col-md-10">
            <input type="text" class="form-control" id="CustomerMessage" name="CustomerMessage" value="@Model.CustomerMessage" readonly />
            @Html.ValidationMessageFor(model => model.CustomerMessage, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <label for="RefundorNewRequest" class="control-label col-md-2">Talep Türü</label>
        <div class="col-md-10">
            <p id="RefundorNewRequest">
                @(Model.RefundorNewRequest ? "Yeni Talep" : "İade")
            </p>
        </div>
    </div>

    <div class="form-group">
        <label for="AdminMessage" class="control-label col-md-2">Müşteri Hizmetleri Dönüş Durumu</label>
        <div class="col-md-10">
            <input type="text" class="form-control" id="AdminMessage" name="AdminMessage" value="@Model.AdminMessage" />
            @Html.ValidationMessageFor(model => model.AdminMessage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-primary">Dönüş Durumunu Güncelle</button>
        </div>
    </div>
</form>